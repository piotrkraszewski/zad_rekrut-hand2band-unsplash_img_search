{"version":3,"sources":["AppFiles/Contexts/AppContext.js","utilities/Consts.js","utilities/FetchFunctions.js","utilities/RoutesFunctions.js","utilities/CalculateWindowHeightHook.js","images/pin.svg","AppFiles/Gallery/SingleImage.js","AppFiles/Hooks/GotoOtherRoutesHooks.js","AppFiles/Gallery/GalleryCards.js","AppFiles/Searchbar/SearchSuggestions.js","images/lupe.svg","AppFiles/Searchbar/Searchbar.js","AppFiles/Hooks/ShowHideSuggestionsHook.js","AppFiles/Gallery/GallerySearchbar.js","utilities/Scroolbar/AppScrollbar.js","AppFiles/Gallery/Gallery.js","images/BG_Unsplash.jpg","AppFiles/StartPage.js","App.js","testingFiles/serviceWorker.js","index.js"],"names":["AppContext","createContext","API_KEY","BASE_API_URL","getAutoComplete","input","a","url","axios","get","response","data","autocomplete","getImagesData","value","getQueryData","allImagesData","map","img","id","regularImgQuality","urls","regular","fullImgQuality","full","name","user","username","location","description","profile_image","medium","tags","tag","title","results","getCurrentPageUrl","pathname","substring","lastIndexOf","getSearchIdFromLocationPathname","CalculateWindowHeightHook","useEffect","setDocHeight","document","documentElement","style","setProperty","window","innerHeight","addEventListener","removeEventListener","SingleImage","open","onClose","imagesData","useContext","className","exitBeforeEnter","div","initial","opacity","animate","exit","transition","duration","filter","item","src","alt","aria-label","onClick","aria-hidden","locationIcon","GotoOtherRoutesHooks","searchbarText","setSearchbarText","oldSearchbarText","setSearchID","setShowSuggestions","history","useHistory","text","length","undefined","push","GalleryCards","searchID","searchImages","useState","isImageOpen","setIsImageOpen","openImageID","setOpenImageID","columnsCountBreakPoints","475","575","1000","1800","e","index","SearchSuggestions","suggestions","showSuggestions","hoveredSuggestionIdx","idx","query","StartPageSearch","onSearchbarTextChanging","props","setOldSearchbarText","showResInSearchBar","node","useRef","hideOnOutsideClick","current","contains","target","ShowHideSuggestionsHook","OnSearchBarClicked","ref","lupe","onSubmit","preventDefault","onChange","type","placeholder","onKeyPress","keyCode","which","GallerySearchbar","AppScrollbar","isMobile","children","Gallery","Movie","href","BG_Unsplash","App","useLocation","setImagesData","getImages","setSuggestions","setHoveredSuggestionIdx","Provider","replace","exact","path","render","Boolean","hostname","match","ReactDOM","basename","process","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5467ba55.chunk.js","sourcesContent":["import {createContext} from 'react'\r\n\r\nexport const AppContext = createContext(null)","export const API_KEY = '&client_id=k7OYrmaj7NjZpJJ9QYDXE0jejMLhB-rm7NTO3SLHbJ0'\r\nexport const BASE_API_URL = 'https://api.unsplash.com/'","import axios from 'axios'\r\nimport { API_KEY, BASE_API_URL } from './Consts'\r\n\r\n\r\n//==== Fetch autoComplitions ====\r\nexport async function getAutoComplete(input){\r\n  const url = `https://unsplash.com/nautocomplete/${input}`\r\n  const response = await axios.get(\r\n    'https://cors-anywhere.herokuapp.com/' +  url\r\n  )\r\n  return response.data.autocomplete\r\n}\r\n\r\n//==== Fetch Images Data ====\r\nexport async function getImagesData(value){\r\n  const url = `${BASE_API_URL}search/photos?query=${value}${API_KEY}`\r\n  const allImagesData = await getQueryData(url)\r\n\r\n  return allImagesData.map(img => ({\r\n    id: img.id,\r\n    regularImgQuality: img.urls.regular,\r\n    fullImgQuality: img.urls.full,\r\n    name: img.user.name,\r\n    username: img.user.username,\r\n    location: img.user.location,\r\n    description: img.description,\r\n    profile_image: img.user.profile_image.medium,\r\n    tags: img.tags.map(tag => tag.title)\r\n  }))\r\n}\r\n\r\nasync function getQueryData(url){\r\n  const response = await axios.get(url)\r\n  return response.data.results\r\n}","export const getCurrentPageUrl = location => (\r\n  location.pathname.substring(0, location.pathname.lastIndexOf(\"/\") + 1)\r\n)\r\n\r\nexport const getSearchIdFromLocationPathname = location => (\r\n  location.pathname.substring(location.pathname.lastIndexOf(\"/\") + 1)\r\n)","import { useEffect } from 'react'\r\n\r\nexport default function CalculateWindowHeightHook() {\r\n// calucluleta size of 1% of window height and saves it to variable\r\n// Proposal for new units to fix this \r\n// https://github.com/w3c/csswg-drafts/issues/4329\r\n// Solution from Jonas Sandstedt comment \r\n// https://chanind.github.io/javascript/2019/09/28/avoid-100vh-on-mobile-web.html\r\n\r\n  useEffect(() => {\r\n    function setDocHeight() {\r\n      document.documentElement.style.setProperty('--vh', `${window.innerHeight/100}px`)\r\n    }\r\n    window.addEventListener('resize', setDocHeight())\r\n    window.addEventListener('orientationchange', setDocHeight())\r\n\r\n    return () => {\r\n      // functions to be called when unmounted. not shure if it does anything here\r\n      document.removeEventListener('resize', setDocHeight)\r\n      document.removeEventListener('orientationchange', setDocHeight)\r\n    }\r\n  }, [])\r\n  \r\n  return (\r\n    <></>\r\n  )\r\n}","export default __webpack_public_path__ + \"static/media/pin.72e55ebe.svg\";","import { useContext } from 'react'\r\nimport '../../styles/main.scss'\r\nimport { AppContext } from '../Contexts/AppContext'\r\nimport locationIcon from '../../images/pin.svg'\r\nimport { AnimatePresence, motion } from \"framer-motion\"\r\n\r\nexport default function SingleImage({open, onClose, id}) {\r\n  const { imagesData } = useContext(AppContext)\r\n\r\n  return (\r\n    <div className='SingleImageContainer'>\r\n    <AnimatePresence exitBeforeEnter>\r\n    {open && (\r\n      <motion.div \r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n        exit={{ opacity: 0 }}\r\n        transition={{ duration: 0.3}}\r\n      >\r\n        <div className='DarkerBG'/>\r\n        <div className='SingleImage'>\r\n          {imagesData.filter(item => item.id === id).map(img => (\r\n          <div>\r\n            <div className='header'>\r\n              <div className='userData'>\r\n                <img \r\n                  src={img.profile_image} \r\n                  alt=\"profile img\"\r\n                  />\r\n                <div>\r\n                  <p>{img.name}</p> \r\n                  <p className='username'>@{img.username}</p> \r\n                </div>\r\n              </div>\r\n\r\n              <div className='btnContainer'>\r\n                <button \r\n                  className=\"btn btn-exit\" \r\n                  aria-label=\"Close\"\r\n                  onClick={onClose}\r\n                >\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n            </div>\r\n              \r\n            <img\r\n              src={img.regularImgQuality}\r\n              alt={`img ${img.id}`}\r\n            />\r\n            <div className='location'>\r\n              {img.location &&\r\n                <img\r\n                  src={locationIcon}\r\n                  alt='location img'\r\n                />\r\n              }\r\n              <p>{img.location}</p>\r\n              <p className='description'>{img.description}</p>\r\n            </div>\r\n          </div>\r\n          ))}\r\n          </div>\r\n      </motion.div>)}\r\n    </AnimatePresence>\r\n    </div>\r\n  )\r\n}","import { useContext } from 'react'\r\nimport { AppContext } from '../Contexts/AppContext'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n\r\nexport default function GotoOtherRoutesHooks() {\r\n  const { searchbarText, setSearchbarText, oldSearchbarText,  setSearchID,  setShowSuggestions} = useContext(AppContext)\r\n  const history = useHistory()\r\n\r\n  function searchImages(text){\r\n    if (searchbarText.length > 0 && text !== undefined) {\r\n      history.push(`/s/${text}`)\r\n      setSearchbarText(oldSearchbarText)\r\n      setShowSuggestions(false)\r\n      setSearchID(text)\r\n    }\r\n  }\r\n\r\n  return [searchImages]\r\n}","import { useState, useContext } from 'react'\r\nimport { motion, AnimatePresence } from \"framer-motion\"\r\nimport Masonry, { ResponsiveMasonry } from \"react-responsive-masonry\"\r\nimport '../../styles/main.scss'\r\nimport { AppContext } from '../Contexts/AppContext'\r\nimport SingleImage from './SingleImage'\r\nimport GotoOtherRoutesHooks from '../Hooks/GotoOtherRoutesHooks'\r\n\r\n\r\nexport default function GalleryCards() {\r\n  const { imagesData, searchID } = useContext(AppContext)\r\n  const [searchImages] = GotoOtherRoutesHooks()\r\n  const [isImageOpen, setIsImageOpen] = useState(false)\r\n  const [openImageID, setOpenImageID] = useState()\r\n\r\n  const openSingleImage = (_, id) => {\r\n    setOpenImageID(id)\r\n    setIsImageOpen(true)\r\n  }\r\n\r\n  return (\r\n    <div className='galleryCards'>\r\n\r\n    <AnimatePresence exitBeforeEnter>\r\n      <motion.div \r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n        exit={{ opacity: 0 }}\r\n        transition={{ duration: 1 }}\r\n        key={searchID}\r\n      > \r\n        <p className='title'>{searchID}</p>\r\n        <ResponsiveMasonry\r\n          columnsCountBreakPoints={{475: 1, 575: 2, 1000: 3, 1800: 4}}\r\n        >\r\n          <Masonry>\r\n          {imagesData.map((item) => \r\n          <div \r\n            className='cardContainer'\r\n            key={item.id} \r\n          >\r\n            <div className='Card'>\r\n              <img\r\n                src={item.regularImgQuality}\r\n                className={item.tags.length === 0 ? 'roundCorners' : ''}\r\n                alt={`poster ${item.id}`}\r\n                onClick={e => openSingleImage(e, item.id)}\r\n              />\r\n              <div>\r\n                {item.tags.map((tag, index) => \r\n                  <div key={`${item.id}-${index}`} \r\n                    onClick={() => searchImages(tag)}>\r\n                    <p>{tag}</p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          )}\r\n          </Masonry>\r\n        </ResponsiveMasonry>\r\n      </motion.div> \r\n    </AnimatePresence>\r\n\r\n    <SingleImage\r\n      open={isImageOpen} \r\n      onClose={() => setIsImageOpen(false)}\r\n      id={openImageID} \r\n    />\r\n\r\n  </div>\r\n  )\r\n}","import { useContext } from 'react'\r\nimport { AppContext } from '../Contexts/AppContext'\r\nimport '../../styles/main.scss'\r\nimport GotoOtherRoutesHooks from '../Hooks/GotoOtherRoutesHooks'\r\n\r\n\r\nexport default function SearchSuggestions() {\r\n  const { searchbarText, suggestions, showSuggestions, hoveredSuggestionIdx } = useContext(AppContext)\r\n\r\n  const [searchImages] = GotoOtherRoutesHooks()\r\n    \r\n  return (\r\n    <ul \r\n      className={'searchbar_ul ' + \r\n      (showSuggestions && searchbarText.length >=3  && 'fadeIn')} \r\n    >\r\n      {suggestions.length > 0  //if\r\n      ? suggestions.map((item, idx) => \r\n        <li \r\n          className={'searchbar_li ' + \r\n          (hoveredSuggestionIdx === idx && 'active')}\r\n\r\n          onClick={()=> searchImages(item.query)}\r\n          index={idx}\r\n          key={idx}\r\n        >\r\n          <p>\r\n            {item.query}\r\n          </p>\r\n        </li>\r\n      )\r\n\r\n      : //else \r\n        <li className='noResult'>\r\n          <p>no suggestions</p>\r\n        </li>\r\n      }\r\n    </ul>\r\n  )\r\n}","export default __webpack_public_path__ + \"static/media/lupe.af78e9aa.svg\";","import { useContext } from 'react'\r\nimport { AppContext } from '../Contexts/AppContext'\r\nimport '../../styles/main.scss'\r\nimport ShowHideSuggestionsHook from '../Hooks/ShowHideSuggestionsHook'\r\nimport GotoOtherRoutesHooks from '../Hooks/GotoOtherRoutesHooks'\r\nimport SearchSuggestions from './SearchSuggestions'\r\nimport lupe from '../../images/lupe.svg'\r\n\r\nexport default function StartPageSearch () {\r\n  const { searchbarText, oldSearchbarText, onSearchbarTextChanging } = useContext(AppContext)\r\n\r\n  const [node, OnSearchBarClicked] = ShowHideSuggestionsHook()\r\n  const [searchImages] = GotoOtherRoutesHooks()\r\n\r\n  function enterKeyPressed(e){\r\n    const code = e.keyCode || e.which\r\n    if (code === 13 /* enter key */) {\r\n      searchImages(searchbarText)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className='searchBar' ref={node}>\r\n        <div onClick={() => searchImages(searchbarText)}>\r\n        <img \r\n          src={lupe} \r\n          alt='lupe'\r\n        />\r\n          </div>\r\n        <form onSubmit={e => e.preventDefault()}>\r\n          <input\r\n            onChange={onSearchbarTextChanging}\r\n            type='text'\r\n            placeholder='Search free high-resolution photos'\r\n            value={searchbarText ? searchbarText : oldSearchbarText}\r\n            onKeyPress={enterKeyPressed}\r\n            onClick={OnSearchBarClicked}\r\n          />\r\n        </form>\r\n      </div>\r\n\r\n      <SearchSuggestions />\r\n    </>\r\n  )\r\n}","import { AppContext } from '../Contexts/AppContext'\r\nimport { useEffect, useContext, useRef } from 'react'\r\n\r\nexport default function ShowHideSuggestionsHook(props) {\r\n  const { searchbarText, setSearchbarText, oldSearchbarText, setOldSearchbarText, showResInSearchBar, setShowSuggestions } = useContext(AppContext)\r\n  const node = useRef()\r\n\r\n  function hideOnOutsideClick(e) {\r\n    if (!node.current.contains(e.target)){\r\n      setShowSuggestions(false) \r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('mousedown', hideOnOutsideClick)\r\n    return () => {\r\n      // return function to be called when unmounted\r\n      document.removeEventListener('mousedown', hideOnOutsideClick)\r\n    }\r\n  }, [])\r\n\r\n  const OnSearchBarClicked = async e => {\r\n    setShowSuggestions(true)\r\n    if (searchbarText === '') {\r\n      showResInSearchBar(oldSearchbarText)\r\n      setSearchbarText(oldSearchbarText)\r\n      setOldSearchbarText('')\r\n    }\r\n  }\r\n\r\n  return [node, OnSearchBarClicked]\r\n}","import '../../styles/main.scss'\r\nimport Searchbar from '../Searchbar/Searchbar'\r\n\r\nexport default function GallerySearchbar() {\r\n  return (\r\n    <div className='col-lg-6 col-md-8 col-sm-9 col-12 gallerySearchbar'>\r\n      <div className='row'>\r\n        <Searchbar/>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import ScrollBar from 'react-perfect-scrollbar'\r\nimport { isMobile } from \"react-device-detect\"\r\nimport './ScroolbarStyle.scss'\r\n\r\nexport default function AppScrollbar (props) {\r\n  // displays perfect scrollbar if not on mobile because I couldn't add refresh gesture on mobile\r\n  // https://github.com/goldenyz/react-perfect-scrollbar/issues/101\r\n  return (\r\n    isMobile ? (\r\n      <div className=\"overflow-y-auto\">\r\n        {props.children}\r\n      </div>\r\n    ) : (\r\n      <ScrollBar className='AppScroolbar'>\r\n        {props.children}\r\n      </ScrollBar>\r\n  ))\r\n}","import GalleryCards from './GalleryCards'\r\nimport GallerySearchbar from './GallerySearchbar'\r\nimport { motion } from \"framer-motion\"\r\nimport AppScroolbar from '../../utilities/Scroolbar/AppScrollbar'\r\n\r\nexport default function Gallery() {\r\n  return (\r\n    <motion.div \r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n      exit={{ opacity: 0 }}\r\n      transition={{ duration: 1 }}\r\n    > \r\n      <AppScroolbar>\r\n        <GallerySearchbar />\r\n        <GalleryCards />\r\n      </AppScroolbar>\r\n    </motion.div> \r\n  )\r\n}","export default __webpack_public_path__ + \"static/media/BG_Unsplash.57fddc0a.jpg\";","\r\nimport Searchbar from './Searchbar/Searchbar'\r\nimport BG_Unsplash from '../images/BG_Unsplash.jpg'\r\nimport { motion } from 'framer-motion'\r\n\r\nexport default function Movie () {\r\n\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n      exit={{ opacity: 0 }}\r\n      transition={{ duration: 1 }}\r\n    >\r\n      <div className='startPage'>\r\n        <div className='row container'>\r\n          <h1>Unsplash</h1>\r\n          <p>\r\n            The internet's source of&nbsp;\r\n            <a href='https://unsplash.com/license'>\r\n              freely-usable images\r\n            </a>\r\n            <br />\r\n            Powered by creators everywhere.\r\n          </p>\r\n          \r\n          <Searchbar />\r\n        </div>\r\n      </div>\r\n\r\n      <img \r\n        className='BgImage'\r\n        src={BG_Unsplash}\r\n        alt='background_image'\r\n      />\r\n    </motion.div>\r\n  )\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { useState, useEffect } from 'react'\r\nimport './styles/main.scss'\r\nimport { Route, Switch, useLocation } from 'react-router-dom'\r\nimport { AnimatePresence } from \"framer-motion\"\r\nimport { AppContext } from './AppFiles/Contexts/AppContext'\r\n\r\nimport { getImagesData, getAutoComplete } from './utilities/FetchFunctions'\r\nimport { getSearchIdFromLocationPathname, getCurrentPageUrl } from './utilities/RoutesFunctions'\r\nimport CalculateWindowHeightHook from './utilities/CalculateWindowHeightHook'\r\nimport Gallery from './AppFiles/Gallery/Gallery'\r\nimport StartPage from './AppFiles/StartPage'\r\n\r\n\r\nexport default function App () {\r\n  const location = useLocation()  // key to app routes\r\n\r\n// ==== Fetch Images Data ====\r\n  const [imagesData, setImagesData] = useState([])\r\n  const [searchID, setSearchID] = useState(getSearchIdFromLocationPathname(location))\r\n  \r\n  // Tracks current searchID to fetch page when user types url\r\n  useEffect(() => {\r\n    const getImages = async (value) => {\r\n      if(value.length > 0)\r\n        setImagesData(await getImagesData(value))\r\n    }\r\n    getImages(searchID)\r\n  }, [searchID])\r\n\r\n  // implements back button in browser\r\n  useEffect(() => {\r\n    setSearchID(getSearchIdFromLocationPathname(location))\r\n  }, [location.pathname])\r\n  \r\n// ==== END Fetch Images Data ====\r\n\r\n\r\n// ==== Searchbar State ====\r\n  const [searchbarText, setSearchbarText] = useState('')\r\n  const [oldSearchbarText, setOldSearchbarText] = useState('')\r\n  const [suggestions, setSuggestions] = useState([])\r\n  const [showSuggestions, setShowSuggestions] = useState(false)\r\n  const [hoveredSuggestionIdx, setHoveredSuggestionIdx] = useState()\r\n\r\n  const onSearchbarTextChanging = e => {\r\n    const value = e.target.value.replace(/[^\\w\\s]/gi, '')\r\n    setSearchbarText(value)\r\n    showResInSearchBar(value)\r\n  }\r\n\r\n  const showResInSearchBar = async (value) => {\r\n    if (value.length === 0) setOldSearchbarText('')\r\n    if (value.length >= 3) {\r\n      setSuggestions(await getAutoComplete(value))\r\n      setOldSearchbarText(value)\r\n    }\r\n  }\r\n// ==== END Searchbar State ====\r\n\r\n  return (\r\n    <div>\r\n      <CalculateWindowHeightHook/>\r\n      <AppContext.Provider \r\n        value={{searchID, searchbarText, setSearchbarText, oldSearchbarText, setOldSearchbarText, onSearchbarTextChanging, imagesData, setSearchID, showResInSearchBar, suggestions, showSuggestions, setShowSuggestions, hoveredSuggestionIdx, setHoveredSuggestionIdx}}\r\n      >\r\n          <AnimatePresence exitBeforeEnter>\r\n            <Switch \r\n              location={location} \r\n              key={getCurrentPageUrl(location)}\r\n            >\r\n              <Route exact path='/' render={() => <StartPage/>} />\r\n              <Route exact path={`/s/:${searchID}`} render={() => <Gallery/>} />\r\n            </Switch>\r\n          </AnimatePresence>\r\n      </AppContext.Provider>\r\n    </div>\r\n  )\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport * as serviceWorker from './testingFiles/serviceWorker'\r\nimport { BrowserRouter } from 'react-router-dom'\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}